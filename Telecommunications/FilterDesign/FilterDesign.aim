
MAIN MODEL Main_FilterDesign
  comment :  "FIR filter design
              
              Problem type:
              SOCP (small)
              
              Description:
              Minimax dB linear phase lowpass filter design. The problem is to find the
              filter weights for a finite impulse response (FIR) filter. This model forms
              an approximation by discretizing the frequency variable (omega) resulting
              in a second-order cone programming (SOCP) problem. SOCP problems can be
              solved by CPLEX and Gurobi.
              
              References:
              Lobo, M.S., L. Vandenberghe, S. Boyd, H. Lebret, Applications of Second-order
              Cone Programming, Linear Algebra and its Applications 284 (1-3), 1998,
              pp. 193-228."

  DECLARATION SECTION Declaration_Model

    PARAMETER:
       identifier   :  NumberOfFrequencies
       range        :  integer
       initial data :  180 ;

    SET:
       identifier   :  Frequencies
       subset of    :  Integers
       index        :  i
       definition   :  {0..NumberOfFrequencies} ;

    PARAMETER:
       identifier   :  NumberOfDiscretizationPoints
       range        :  integer
       initial data :  20 ;

    SET:
       identifier   :  DiscretizationPoints
       subset of    :  Integers
       index        :  k
       definition   :  {0..NumberOfDiscretizationPoints-1}
       comment      :  "Discretization points for first half of the (symmetric) filter." ;

    PARAMETER:
       identifier   :  FilterLength
       range        :  integer
       definition   :  2 * NumberOfDiscretizationPoints ;

    PARAMETER:
       identifier   :  LastPassbandFrequency
       range        :  integer
       definition   :  NumberOfFrequencies/2
       comment      :  "The length of the FIR filter." ;

    SET:
       identifier   :  PassbandFrequencies
       subset of    :  Frequencies
       index        :  pf
       definition   :  {0..LastPassbandFrequency} ;

    PARAMETER:
       identifier   :  FirstStopbandFrequency
       range        :  integer
       definition   :  2*NumberOfFrequencies/3 ;

    SET:
       identifier   :  StopbandFrequencies
       subset of    :  Frequencies
       index        :  sf
       definition   :  {FirstStopbandFrequency..NumberOfFrequencies} ;

    PARAMETER:
       identifier   :  Beta
       initial data :  0.01 ;

    PARAMETER:
       identifier   :  Frequency
       index domain :  (i)
       definition   :  i*Pi/180 
       comment      :  "Frequency \"variable\" omega." ;

    PARAMETER:
       identifier   :  pi
       definition   :  4 * arctan(1) ;

    VARIABLE:
       identifier   :  Deviation
       range        :  [1, inf) ;

    VARIABLE:
       identifier   :  DeviationReciprocal
       range        :  nonnegative
       comment      :  "The reciprocal of variable Deviation, i.e., DeviationReciprocal = 1/Deviation." ;

    VARIABLE:
       identifier   :  FilterCoefficient
       index domain :  (k)
       range        :  free
       comment      :  "The coefficients (impulse response) of a finite impulse response (FIR) filter.
                        We assume that the filter coefficients are symmetric and therefore we only need
                        variables for (the first) half of the filter." ;

    VARIABLE:
       identifier   :  obj
       range        :  free
       definition   :  Deviation
       comment      :  "Minimax deviation of the filter magnitude measured in decibels (dB)." ;

    CONSTRAINT:
       identifier   :  DeviationConstraint
       definition   :  4+y^2 <= x^2
       comment      :  "Second-order cone reformulation of the constraint
                                sqrt(4 + (Deviation-DeviationReciprocal)^2) <= Deviation+DeviationReciprocal
                        using the intermediate variables
                                x = DeviationReciprocal + Deviation
                                y = DeviationReciprocal - Deviation" ;

    VARIABLE:
       identifier   :  x
       range        :  nonnegative
       definition   :  DeviationReciprocal + Deviation
       comment      :  "Intermediate variable used to reformulate problem as SOCP." ;

    VARIABLE:
       identifier   :  y
       range        :  free
       definition   :  DeviationReciprocal - Deviation
       comment      :  "Intermediate variable used to reformulate problem as SOCP." ;

    CONSTRAINT:
       identifier   :  PassBandDeviationUpperBound
       index domain :  pf
       definition   :  2 * sum[ k, FilterCoefficient(k) * cos((k-(FilterLength-1)/2)*Frequency(pf)) ]
                       <=
                       Deviation ;

    CONSTRAINT:
       identifier   :  PassBandDeviationLowerBound
       index domain :  pf
       definition   :  2 * sum[ k, FilterCoefficient(k) * cos((k-(FilterLength-1)/2)*Frequency(pf)) ]
                       >=
                       DeviationReciprocal ;

    CONSTRAINT:
       identifier   :  StopBandUppperBound
       index domain :  sf
       definition   :  2 * sum[ k, FilterCoefficient(k) * cos((k-(FilterLength-1)/2)*Frequency(sf)) ]
                       <=
                       Beta ;

    CONSTRAINT:
       identifier   :  StopBandLowerBound
       index domain :  sf
       definition   :  2 * sum[ k, FilterCoefficient(k) * cos((k-(FilterLength-1)/2)*Frequency(sf)) ]
                       >=
                       -Beta ;

    MATHEMATICAL PROGRAM:
       identifier   :  LeastT
       objective    :  obj
       direction    :  minimize
       constraints  :  AllConstraints
       variables    :  AllVariables
       type         :  QCP ;

  ENDSECTION  ;

  DECLARATION SECTION Declaration_Results_Display

    SET:
       identifier   :  FilterDiscretizationPoints
       subset of    :  Integers
       index        :  j
       definition   :  {0..FilterLength-1}
       comment      :  "Discretization points for first and second half of the (symmetric) filter.
                        This set is only used to display the filter coefficients for the complete
                        filter (using parameter FilterCoefficientComplete)." ;

    PARAMETER:
       identifier   :  FilterCoefficientComplete
       index domain :  j
       range        :  free
       definition   :  if (j<=FilterLength/2-1) then
                               FilterCoefficient(j)
                       else
                               FilterCoefficient(FilterLength-j-1)
                       endif
       comment      :  "The variable FilterCoefficient only captures the first half of the symmetric
                        filter coefficients. This parameter is used to display the complete filter
                        in which the second half is a mirror view of the first half." ;

  ENDSECTION  ;

  PROCEDURE
    identifier :  MainInitialization

  ENDPROCEDURE  ;

  PROCEDURE
    identifier :  MainExecution
    body       :  
      Deviation := 1.04649;
      DeviationReciprocal := 0.955577;
      
      FilterCoefficient[0] :=  -0.00503552;
      FilterCoefficient[1] :=   0.0196456;
      FilterCoefficient[2] :=   0.0246178;
      FilterCoefficient[3] :=  -0.0242968;
      FilterCoefficient[4] :=  -0.0189922;
      FilterCoefficient[5] :=   0.0569488;
      FilterCoefficient[6] :=   0.000586451;
      FilterCoefficient[7] :=  -0.117416;
      FilterCoefficient[8] :=   0.0895147;
      FilterCoefficient[9] :=   0.497671;
      
      x := DeviationReciprocal+Deviation;
      y := DeviationReciprocal-Deviation;
      obj := Deviation;
      
      solve LeastT;

  ENDPROCEDURE  ;

  PROCEDURE
    identifier :  MainTermination
    body       :  
      return DataManagementExit();

  ENDPROCEDURE  ;

ENDMODEL Main_FilterDesign ;
