
MAIN MODEL Main_LargestSmallPolygon
  comment :  "Largest small polygon
              
              Problem type:
              NLP (small)
              
              Description:
              Find the polygon with maximal area, among polygons with n sides and diameter
              d <= 1. This problem has many local minima and therefore general nonlinear
              solvers are usually expected to find only local solutions.
              
              References:
              Dolan, E.D., J.J. More, Benchmarking Optimization Software with COPS, 2000."

  DECLARATION SECTION 

    PARAMETER:
       identifier   :  NumberOfSides
       range        :  integer
       initial data :  10
       comment      :  "Number of sides and points" ;

    SET:
       identifier   :  Points
       subset of    :  Integers
       indices      :  i, j
       definition   :  {1..NumberOfSides} ;

    PARAMETER:
       identifier   :  pi
       definition   :  4 * arctan(1) ;

    VARIABLE:
       identifier   :  PolarRadius
       index domain :  (i)
       range        :  nonnegative
       comment      :  "r: Polar radius (distance to fixed vertex)" ;

    VARIABLE:
       identifier   :  PolarAngle
       index domain :  (i)
       range        :  [0, pi]
       comment      :  "theta: Polar angle (measured from fixed direction)." ;

    VARIABLE:
       identifier   :  PolygonArea
       range        :  free
       definition   :  0.5 * sum(i | i<>NumberOfSides, PolarRadius(i+1) * PolarRadius(i) * sin(PolarAngle(i+1) - PolarAngle(i))) ;

    CONSTRAINT:
       identifier   :  Distance
       index domain :  (i,j) | i < j
       definition   :  PolarRadius(i)^2 + PolarRadius(j)^2 -
                       2 * PolarRadius(i) * PolarRadius(j) * cos(PolarAngle(i) - PolarAngle(j)) <= 1 ;

    CONSTRAINT:
       identifier   :  OrderConstraint
       index domain :  i | i<NumberOfSides
       definition   :  PolarAngle(i) - PolarAngle(i+1) <= 0 ;

    CONSTRAINT:
       identifier   :  LastPolarRadius
       definition   :  PolarRadius(NumberOfSides) = 0
       comment      :  "Fixing last vertex at the origin" ;

    CONSTRAINT:
       identifier   :  LastPolarAngle
       definition   :  PolarAngle(NumberOfSides) = Pi
       comment      :  "Fixing last vertex at the origin" ;

    MATHEMATICAL PROGRAM:
       identifier   :  LeastArea
       objective    :  PolygonArea
       direction    :  maximize
       constraints  :  AllConstraints
       variables    :  AllVariables
       type         :  NLP ;

  ENDSECTION  ;

  DECLARATION SECTION Declaration_Result_Display

    SET:
       identifier   :  DisplayPoints
       subset of    :  Integers
       index        :  ii
       definition   :  {0..NumberOfSides}
       comment      :  "We need an extra point to close the last line of the polygon displayed
                        on the page." ;

    PARAMETER:
       identifier   :  X
       index domain :  (ii)
       definition   :  if ( ii=0 ) then
                               0
                       else
                               PolarRadius(ii) * cos(PolarAngle(ii))
                       endif
       comment      :  "X coordinate of points in polygon" ;

    PARAMETER:
       identifier   :  Y
       index domain :  ii
       definition   :  if ( ii=0 ) then
                               0
                       else
                               PolarRadius(ii) * sin(PolarAngle(ii))
                       endif
       comment      :  "Y coordinate of points in polygon" ;

  ENDSECTION  ;

  PROCEDURE
    identifier :  MainInitialization

  ENDPROCEDURE  ;

  PROCEDURE
    identifier :  MainExecution
    body       :  
      ! Specify starting point.
      PolarRadius(i) := 4 * i / (Card(i) + 1 - i) / (Card(i) + 1)^2;
      PolarAngle(i) := Pi * i / Card(i);
      
      solve LeastArea;

  ENDPROCEDURE  ;

  PROCEDURE
    identifier :  MainTermination
    body       :  
      return 1;

  ENDPROCEDURE  ;

ENDMODEL Main_LargestSmallPolygon ;
