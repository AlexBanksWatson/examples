
MAIN MODEL Main_HangingChain
  comment :  "Hanging chain
              
              Problem type:
              NLP (small)
              
              Description:
              Determination of the shape of a chain (of uniform density) suspended between
              two points with minimal potential energy.
              
              References:
              Dolan, E.D., J.J. More, Benchmarking Optimization Software with COPS, 2000."

  DECLARATION SECTION 

    PARAMETER:
       identifier   :  NumberOfIntervals
       range        :  integer
       initial data :  200 ;

    SET:
       identifier   :  Intervals
       subset of    :  Integers
       index        :  i
       definition   :  {0..NumberOfIntervals} ;

    PARAMETER:
       identifier   :  Bla
       index domain :  i
       definition   :  i/NumberOfIntervals ;

    PARAMETER:
       identifier   :  ChainLength
       definition   :  4
       comment      :  "Length of the suspended chain" ;

    PARAMETER:
       identifier   :  HeightLeft
       definition   :  1
       comment      :  "Height of the chain at t=0 (left)" ;

    PARAMETER:
       identifier   :  HeightRight
       definition   :  3
       comment      :  "Height of the chain at t=1 (right)" ;

    PARAMETER:
       identifier   :  IntervalLength
       definition   :  1/NumberOfIntervals
       comment      :  "derivative of x" ;

    PARAMETER:
       identifier   :  TMin
       definition   :  if (HeightRight > HeightLeft) then
                               0.25
                       else
                               0.75
                       endif ;

    VARIABLE:
       identifier   :  ChainHeight
       index domain :  i
       range        :  free
       definition   :  if (i=0) then
                               HeightLeft
                       else
                               ChainHeight(i-1) + 0.5 * IntervalLength * (ChainHeightDerivative(i-1) + ChainHeightDerivative(i))
                       endif
       comment      :  "Height of the chain" ;

    VARIABLE:
       identifier   :  ChainHeightDerivative
       index domain :  (i)
       range        :  free
       comment      :  "Derivative of ChainHeight" ;

    VARIABLE:
       identifier   :  PotentialEnergy
       range        :  free
       definition   :  0.5 * IntervalLength * sum(i | i>0, ChainHeight(i-1) * sqrt(1 + sqr(ChainHeightDerivative(i-1))) +
                       ChainHeight(i) * sqrt(1 + sqr(ChainHeightDerivative(i)))) ;

    CONSTRAINT:
       identifier   :  LengthConstraint
       definition   :  0.5 * IntervalLength * sum(i | i>0, sqrt(1 + sqr(ChainHeightDerivative(i-1))) +
                       sqrt(1 + sqr(ChainHeightDerivative(i)))) = ChainLength ;

    CONSTRAINT:
       identifier   :  ChainHeightRightConstraint
       definition   :  ChainHeight(NumberOfIntervals) = HeightRight ;

    MATHEMATICAL PROGRAM:
       identifier   :  LeastPotentialEnergy
       objective    :  PotentialEnergy
       direction    :  minimize
       constraints  :  AllConstraints
       variables    :  AllVariables
       type         :  NLP ;

  ENDSECTION  ;

  PROCEDURE
    identifier :  MainInitialization

  ENDPROCEDURE  ;

  PROCEDURE
    identifier :  MainExecution
    body       :  
      solve LeastPotentialEnergy;

  ENDPROCEDURE  ;

  PROCEDURE
    identifier :  MainTermination
    body       :  
      return 1;

  ENDPROCEDURE  ;

ENDMODEL Main_HangingChain ;
