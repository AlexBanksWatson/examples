
MAIN MODEL Main_StructuralOptimization
  comment :  "Structural Optimization
              
              Problem type:
              NLP (small)
              
              Description:
              Design of a vertically corrugated transverse bulkhead of an oil tanker.
              The objective is to design for minimum weight of the bulkhead while taking
              stress, moment of inertia and plate thickness constraints into account.
              
              References:
              Bracken, J., and G.P. McCormick, Chapter 6 in: Selected Applications of
              Nonlinear Programming, John Wiley and Sons, New York, 1968, pp. 50-57."

  DECLARATION SECTION Model_Declarations

    SET:
       identifier   :  Panels
       indices      :  s, sp
       definition   :  data { top, middle, bottom } ;

    PARAMETER:
       identifier   :  SpecificGravityOfWater
       definition   :  0.001 ;

    PARAMETER:
       identifier   :  MaximumBendingStress
       definition   :  1200 ;

    PARAMETER:
       identifier   :  DetNorskeVeritas
       initial data :  4.25 ;

    PARAMETER:
       identifier   :  CorrosionAllowance
       initial data :  0.2
       comment      :  "This parameter corresponds to K2 in the Bracken and McCormick article. Unfortunately,
                        the article does not contain data for the corrosion allowance. The value used here
                        was also used by others." ;

    PARAMETER:
       identifier   :  FlangeEffectiveness
       initial data :  0.8
       comment      :  "This parameter corresponds to 'e' in the Bracken and McCormick article. Unfortunately,
                        the article does not contain data for the flange effectiveness. The value used here
                        was also used by others." ;

    PARAMETER:
       identifier   :  HeightAbovePanel
       initial data :  250 ;

    PARAMETER:
       identifier   :  SpecificWeightOfSteel
       definition   :  0.007851 ;

    PARAMETER:
       identifier   :  WidthOfPanel
       initial data :  500
       comment      :  "Unfortunately, the Bracken and McCormick article does not contain data for the
                        width of the panel. The value used here was also used by others." ;

    PARAMETER:
       identifier   :  LengthOfPanel
       index domain :  (s)
       initial data :  data { top : 495,  middle : 385,  bottom : 315 } ;

    PARAMETER:
       identifier   :  HeightAtTheMiddle
       index domain :  s
       definition   :  HeightAbovePanel + sum( sp | sp <= s, LengthOfPanel(sp) ) ;

    PARAMETER:
       identifier   :  HeightAtTheBase
       index domain :  (s)
       definition   :  HeightAtTheMiddle(s) - LengthOfPanel(s)/2
       comment      :  "The Bracken and McCormick article contains a mistake regarding the calculation of the height
                        at the base. The correct values calculated according to the above definition are:
                           data { top : 497.5,  middle : 937.5,  bottom : 1287.5 }
                        In the Bracken and McCormick article the following data is used in Figure 6.3:
                           data { top : 497.5,  middle : 1037.5,  bottom : 1287.5 }" ;

    PARAMETER:
       identifier   :  K1
       index domain :  (s)
       definition   :  SpecificGravityOfWater * HeightAtTheBase(s) * LengthOfPanel(s) * LengthOfPanel(s) / ( 12 * MaximumBendingStress )
       comment      :  "This parameter corresponds to K1*h*l^2 in the Bracken and McCormick article." ;

    PARAMETER:
       identifier   :  LowerBoundOnThickness1
       initial data :  1.05
       comment      :  "This parameter corresponds to t^min in the Bracken and McCormick article
                        as used in constraint (6.7)." ;

    PARAMETER:
       identifier   :  LowerBoundOnThickness2
       index domain :  (s)
       definition   :  DetNorskeVeritas * LowerBoundOnThickness1 * sqrt( 0.01 * HeightAtTheBase(s) )
       comment      :  "This parameter corresponds to 3.9*b*sqrt(h_1) in the Bracken and McCormick article
                        as used in constraint (6.7)." ;

    VARIABLE:
       identifier   :  SectionModulus
       index domain :  (s)
       range        :  nonnegative
       definition   :  DepthOfCorrugation * PlateThickness(s) * ( LengthOfWeb/3 +  WidthOfFlange * FlangeEffectiveness ) / 2
       comment      :  "SectionModulus('top') corresponds to the expression 1/6*x2*x3*x4 + e/2*x1*x3*x4 in
                        the Bracken and McCormick article as used in the constraints (6.10) and (6.13)." ;

    VARIABLE:
       identifier   :  PlateThickness
       index domain :  (s)
       range        :  nonnegative
       comment      :  "This variable corresponds to the variables x4, x5 and x6 in the Bracken
                        and McCormick article." ;

    VARIABLE:
       identifier   :  WidthOfFlange
       range        :  nonnegative
       comment      :  "This variable corresponds to the variable x1 in the Bracken and McCormick article." ;

    VARIABLE:
       identifier   :  LengthOfWeb
       range        :  nonnegative
       comment      :  "This variable corresponds to the variable x2 in the Bracken and McCormick article." ;

    VARIABLE:
       identifier   :  DepthOfCorrugation
       range        :  nonnegative
       comment      :  "This variable corresponds to the variable x3 in the Bracken and McCormick article." ;

    VARIABLE:
       identifier   :  WidthOfCorrugation
       range        :  nonnegative
       definition   :  WidthOfFlange + sqrt( LengthOfWeb^2 - DepthOfCorrugation^2 )
       comment      :  "This variable corresponds to the expression x1 + (x2^2 - x3^2) in the Bracken and
                        McCormick article as used in the constraints (6.9) - (6.15)." ;

    VARIABLE:
       identifier   :  WeightOfStructure
       range        :  free
       definition   :  SpecificWeightOfSteel * WidthOfPanel * ( WidthOfFlange + LengthOfWeb )
                       * sum( s, PlateThickness(s) * LengthOfPanel(s) ) / ( WidthOfCorrugation * 1000 ) ;

    CONSTRAINT:
       identifier   :  BendingStress
       index domain :  s
       definition   :  SectionModulus(s) >= K1(s) * WidthOfCorrugation ;

    CONSTRAINT:
       identifier   :  MomentOfInertia
       index domain :  s
       definition   :  SectionModulus(s) * DepthOfCorrugation/2 >= 2.2 * ( K1(s) * WidthOfCorrugation )**(4/3) ;

    CONSTRAINT:
       identifier   :  PlateVsWidth
       index domain :  (s)
       definition   :  10 * PlateThickness(s) >= LowerBoundOnThickness2(s) * WidthOfFlange * 0.01 + 10 * CorrosionAllowance ;

    CONSTRAINT:
       identifier   :  PlateVsLength
       index domain :  (s)
       definition   :  10 * PlateThickness(s) >= LowerBoundOnThickness2(s) * LengthOfWeb * 0.01 + 10 * CorrosionAllowance ;

    CONSTRAINT:
       identifier   :  GeometricConstraint
       definition   :  LengthOfWeb >= DepthOfCorrugation + 0.001 ;

    MATHEMATICAL PROGRAM:
       identifier   :  LeastWeightOfStructure
       objective    :  WeightOfStructure
       direction    :  minimize
       constraints  :  AllConstraints
       variables    :  AllVariables
       type         :  NLP ;

  ENDSECTION  ;

  SECTION The_User_Interface


    DECLARATION SECTION Interface_Declarations

      PARAMETER:
         identifier   :  NumberOfCorrugations
         definition   :  Round(WidthOfCorrugation*100/WidthOfPanel) ;

      SET:
         identifier   :  Points
         index        :  p
         parameter    :  point
         definition   :  ElementRange( 1, NumberOfCorrugations*4, prefix: "p-" ) ;

      PARAMETER:
         identifier   :  Y
         index domain :  (p) ;

      PARAMETER:
         identifier   :  X
         index domain :  (p) ;

    ENDSECTION  ;

    PROCEDURE
      identifier :  CalculateCorrugationShape
      body       :  
        point := first(Points);
        
        while (point) do
            y(point) := 0;
            y(point+1) := 0;
            y(point+2) := DepthOfCorrugation ;
            y(point+3) := DepthOfCorrugation;
            point += 4;
        endwhile;
        
        point := first(Points);
        x(point) := 0;
        point += 1;
        x(point) := WidthOfFlange;
        point += 1;
        
        while (point) do
            x(point) := x(point-1) + sqrt(LengthOfWeb**2 - DepthOfCorrugation**2);
            x(point+1) := x(point) + WidthOfFlange;
            point += 2;
        endwhile;

    ENDPROCEDURE  ;

  ENDSECTION The_User_Interface ;

  PROCEDURE
    identifier :  MainInitialization

  ENDPROCEDURE  ;

  PROCEDURE
    identifier :  MainExecution
    body       :  
      PlateThickness(s).lower := LowerBoundOnThickness1;
      
      ! Starting Point
      PlateThickness('top') := 1.2;
      PlateThickness('middle') := 1.2;
      PlateThickness('bottom') := 1.2;
      WidthOfFlange := 45.8;
      LengthOfWeb := 43.2;
      DepthOfCorrugation := 30.5;
      WidthOfCorrugation := WidthOfFlange + sqrt(LengthOfWeb**2-DepthOfCorrugation**2);
      SectionModulus(s) := DepthOfCorrugation * PlateThickness(s) * ( LengthOfWeb/3 +  WidthOfFlange * FlangeEffectiveness ) / 2;
      
      solve LeastWeightOfStructure;
      
      CalculateCorrugationShape;

  ENDPROCEDURE  ;

  PROCEDURE
    identifier :  MainTermination
    body       :  
      return 1;

  ENDPROCEDURE  ;

ENDMODEL Main_StructuralOptimization ;
