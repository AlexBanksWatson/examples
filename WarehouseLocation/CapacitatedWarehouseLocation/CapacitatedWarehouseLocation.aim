
MAIN MODEL Main_CapacitatedWarehouseLocation
  comment :  "Capacitated warehouse location
              
              Problem type:
              MIP (small)
              
              Description:
              The capacitated warehouse location problem is the problem of locating
              a number of warehouses which have to service a set of customers, at
              minimum cost, where each customer has an associated demand and there
              are constraints on the total demand that can be met from a warehouse.
              
              References:
              Beasley, J.E., An algorithm for solving large capacitated warehouse
              location problems, European Journal of Operational Research 33, 1988,
              pp. 314-325."

  DECLARATION SECTION 

    PARAMETER:
       identifier   :  NumberOfLocations ;

    PARAMETER:
       identifier   :  NumberOfCustomers ;

    SET:
       identifier   :  Locations
       subset of    :  Integers
       index        :  i
       definition   :  {1..NumberOfLocations}
       comment      :  "Potential locations" ;

    SET:
       identifier   :  Customers
       subset of    :  Integers
       index        :  j
       definition   :  {1..NumberOfCustomers} ;

    PARAMETER:
       identifier   :  Demand
       index domain :  (j) ;

    PARAMETER:
       identifier   :  AllocationCost
       index domain :  (i,j) ;

    PARAMETER:
       identifier   :  Capacity
       index domain :  (i) ;

    PARAMETER:
       identifier   :  LowerLimitOnDemand
       index domain :  (i)
       definition   :  0 ;

    PARAMETER:
       identifier   :  LowerLimitOfOpenWarehouses
       definition   :  0 ;

    PARAMETER:
       identifier   :  UpperLimitOfOpenWarehouses
       definition   :  NumberOfLocations ;

    PARAMETER:
       identifier   :  FixedCost
       index domain :  (i) ;

    VARIABLE:
       identifier   :  DemandFractionSupplied
       index domain :  (i,j)
       range        :  [0, 1] ;

    VARIABLE:
       identifier   :  Open
       index domain :  (i)
       range        :  binary ;

    VARIABLE:
       identifier   :  TotalCost
       range        :  free
       definition   :  sum((i,j), AllocationCost(i, j) * DemandFractionSupplied(i, j)) + sum(i, FixedCost(i) * Open(i)) ;

    CONSTRAINT:
       identifier   :  DemandSatisfaction
       index domain :  (j)
       definition   :  sum(i, DemandFractionSupplied(i, j)) >= 1 ;

    CONSTRAINT:
       identifier   :  WarehouseCapacity
       index domain :  (i)
       definition   :  sum(j, Demand(j) * DemandFractionSupplied(i, j)) <= Capacity(i) * Open(i) ;

    CONSTRAINT:
       identifier   :  MinimumSupllied
       index domain :  (i)
       definition   :  sum(j, Demand(j) * DemandFractionSupplied(i, j)) >= LowerLimitOnDemand(i) * Open(i) ;

    CONSTRAINT:
       identifier   :  MinimumWarehousesOpened
       definition   :  sum(i, Open(i)) >= LowerLimitOfOpenWarehouses ;

    CONSTRAINT:
       identifier   :  MaximumWarehousesOpened
       definition   :  sum(i, Open(i)) <= UpperLimitOfOpenWarehouses ;

    CONSTRAINT:
       identifier   :  EffectiveCapacity
       index domain :  (i,j)
       definition   :  DemandFractionSupplied(i, j) <= min(1, Capacity(i)/Demand(j)) * Open(i) ;

    MATHEMATICAL PROGRAM:
       identifier   :  LeastCost
       objective    :  TotalCost
       direction    :  minimize
       constraints  :  AllConstraints
       variables    :  AllVariables
       type         :  MIP ;

  ENDSECTION  ;

  PROCEDURE
    identifier :  MainInitialization
    body       :  
      read from file "Input//cap134.inp";

  ENDPROCEDURE  ;

  PROCEDURE
    identifier :  MainExecution
    body       :  
      solve LeastCost;

  ENDPROCEDURE  ;

  PROCEDURE
    identifier :  MainTermination
    body       :  
      return 1;

  ENDPROCEDURE  ;

ENDMODEL Main_CapacitatedWarehouseLocation ;
